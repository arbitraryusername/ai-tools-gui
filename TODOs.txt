
SERVER
- add some code guidelines to prompt, like "ensure business rules and assumptions are not duplicated"
- log the sent prompts and the responses to a file for debugging. should also log errors.

CLIENT 
- capture javascript runtime errors and automatically propose solutions
- add ability to define a prompt context, where the user can select specific commits,
  which will update the selected files list to be files only from those commits.
  based on these selected commits, prompt recommendations can be generated for next steps
  as well as suggestions for code improvements
- make draggable dividers for the commits section and files section. these would be subtle ideally
- hide everything in the UI when the repo directory full path is not populated and until Load Repo is clicked
- could have toggle that explains the changes, but this is just nice to have at this point
- tabs of repos along the left side, tabs of tasks for the current repo along the top
- each task is like a new thread, meaning we keep context of previous messages
- after the first message in a task, the user is shown three options for the next prompt,
  and the user can edit this before submitting. this saves on many keystrokes, and makes this
  much more practical to use on mobile devices! 
- could have a refactor/improvement mode vs a new feature mode, which have different
  UI and/or different workflows.